// <auto-generated />
using System;
using Fixed_Assets.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FixedAssetsAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20211113052838_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Models.ActiveType", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.HasKey("id");

                    b.ToTable("ActiveType");
                });

            modelBuilder.Entity("Models.CalculusDepreciation", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("deprecciatedAccount")
                        .HasColumnType("int");

                    b.Property<double>("deprecciatedAcumulated")
                        .HasColumnType("float");

                    b.Property<double>("deprecciatedAmount")
                        .HasColumnType("float");

                    b.Property<int>("fixedAssetId")
                        .HasColumnType("int");

                    b.Property<DateTime>("processDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("processMonth")
                        .HasColumnType("int");

                    b.Property<int>("processYear")
                        .HasColumnType("int");

                    b.Property<int>("purchaseAccount")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("fixedAssetId")
                        .IsUnique();

                    b.ToTable("CalculusDepreciation");
                });

            modelBuilder.Entity("Models.Department", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.HasKey("id");

                    b.ToTable("Department");
                });

            modelBuilder.Entity("Models.Employee", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("admissionDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("departmentId")
                        .HasColumnType("int");

                    b.Property<string>("documentId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("personType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.HasKey("id");

                    b.HasIndex("departmentId");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("Models.FixedAsset", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("activeTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("admissionDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("departmentId")
                        .HasColumnType("int");

                    b.Property<double>("depreciationAccumulated")
                        .HasColumnType("float");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("purchaseValue")
                        .HasColumnType("float");

                    b.HasKey("id");

                    b.HasIndex("activeTypeId")
                        .IsUnique();

                    b.HasIndex("departmentId")
                        .IsUnique();

                    b.ToTable("FixedAsset");
                });

            modelBuilder.Entity("Models.CalculusDepreciation", b =>
                {
                    b.HasOne("Models.FixedAsset", "fixedAsset")
                        .WithOne("calculusDepreciation")
                        .HasForeignKey("Models.CalculusDepreciation", "fixedAssetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("fixedAsset");
                });

            modelBuilder.Entity("Models.Employee", b =>
                {
                    b.HasOne("Models.Department", "department")
                        .WithMany("employees")
                        .HasForeignKey("departmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("department");
                });

            modelBuilder.Entity("Models.FixedAsset", b =>
                {
                    b.HasOne("Models.ActiveType", "activeType")
                        .WithOne("fixedAsset")
                        .HasForeignKey("Models.FixedAsset", "activeTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.Department", "department")
                        .WithOne("fixedAsset")
                        .HasForeignKey("Models.FixedAsset", "departmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("activeType");

                    b.Navigation("department");
                });

            modelBuilder.Entity("Models.ActiveType", b =>
                {
                    b.Navigation("fixedAsset");
                });

            modelBuilder.Entity("Models.Department", b =>
                {
                    b.Navigation("employees");

                    b.Navigation("fixedAsset");
                });

            modelBuilder.Entity("Models.FixedAsset", b =>
                {
                    b.Navigation("calculusDepreciation");
                });
#pragma warning restore 612, 618
        }
    }
}
